@model AuditTrailEventViewModel
@using OrchardCore.AuditTrail.ViewModels
@using OrchardCore.ContentManagement
@using OrchardCore.Contents.AuditTrail.Extensions
@using OrchardCore.Contents.AuditTrail.Models
@using OrchardCore.Contents.AuditTrail.Providers
@inject IStringLocalizer<ViewContext> S;

@{
    var auditTrailContentEvent = Model.Event.As<AuditTrailContentEvent>();

    var contentItem = auditTrailContentEvent.ContentItem;
    var versionNumber = auditTrailContentEvent.VersionNumber;

    var eventDescriptor = Model.Descriptor;
    var versionText = S["Version {0}", versionNumber];
    var eventName = eventDescriptor.LocalizedName.Value.ToLowerInvariant();

    var contentType = contentItem.ContentType;
    var displayText = contentItem.DisplayText;

    var itemEditLink = await Orchard.GetItemEditLinkAsync(displayText, contentItem);
}

@if (Model.Event.Name == ContentAuditTrailEventProvider.Restored)
{
    @T["The {0} {1} was restored as {2}",
    contentType,
    Html.Raw(itemEditLink),
    Html.ActionLink(versionText, "Detail", "Content",
    new
    {
        area = "OrchardCore.Contents",
        auditTrailEventId = Model.Event.EventId,
        versionNumber = versionNumber
    }, null)]
}
else if (Model.Event.Name == ContentAuditTrailEventProvider.Removed)
{
    @T["The {0} <strong>{1}</strong> was {2}.",
    contentType,
    displayText,
    eventName]
}
else
{
    @T["{0} of the {1} {2} was {3}",
    Html.ActionLink(versionText, "Detail", "Content",
    new
    {
        area = "OrchardCore.Contents",
        auditTrailEventId = Model.Event.EventId,
        versionNumber = versionNumber
    }, null),
    contentType,
    Html.Raw(itemEditLink),
    eventName]
}
