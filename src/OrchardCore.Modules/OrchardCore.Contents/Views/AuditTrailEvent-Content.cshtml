@model AuditTrailEventViewModel
@using OrchardCore.AuditTrail.Services.Models
@using OrchardCore.AuditTrail.ViewModels
@using OrchardCore.ContentManagement
@using OrchardCore.Contents.AuditTrail.Models
@using OrchardCore.Contents.AuditTrail.Providers

@{
    var auditTrailEvent = Model.AuditTrailEvent;
    var auditTrailContentEvent = auditTrailEvent.As<AuditTrailContentEvent>();
    var contentItem = auditTrailContentEvent.ContentItem;
    var versionNumber = auditTrailContentEvent.VersionNumber;
    var latestVersionId = ((IShape)Model).GetProperty<string>("LatestVersionId");
    var diffNodes = ((IShape)Model).GetProperty<DiffNode[]>("DiffNodes");
}

<script asp-name="jsdiff" depends-on="jQuery" asp-src="~/OrchardCore.AuditTrail/Scripts/diff.min.js" debug-src="~/OrchardCore.AuditTrail/Scripts/diff.js" cdn-src="https://cdnjs.cloudflare.com/ajax/libs/jsdiff/4.0.2/diff.min.js" debug-cdn-src="https://cdnjs.cloudflare.com/ajax/libs/jsdiff/4.0.2/diff.js" type="text/javascript" version="4.0.2" at="Foot"></script>
<script depends-on="jsdiff" asp-src="~/OrchardCore.AuditTrail/Scripts/diff.min.js" debug-src="~/OrchardCore.AuditTrail/Scripts/diff.js" type="text/javascript" at="Foot"></script>

<div class="form-group">
    <div class="list-group list-group-horizontal">
        <div class="list-group-item border-0 font-weight-bold col-4 col-lg-3 col-xl-2 pt-0 pr-0 pb-0">@T["Content ID"]</div>
        <div class="list-group-item border-0 pt-0 pb-0">@contentItem.ContentItemId</div>
    </div>

    <div class="list-group list-group-horizontal">
        <div class="list-group-item border-0 font-weight-bold col-4 col-lg-3 col-xl-2 pt-0 pr-0 pb-0">@T["Content type"]</div>
        <div class="list-group-item border-0 pt-0 pb-0">@contentItem.ContentType</div>
    </div>

    <div class="list-group list-group-horizontal">
        <div class="list-group-item border-0 font-weight-bold col-4 col-lg-3 col-xl-2 pt-0 pr-0 pb-0">@T["Display text"]</div>
        <div class="list-group-item border-0 pt-0 pb-0">
        @if (auditTrailEvent.EventName == ContentAuditTrailEventProvider.Removed)
        {
            @contentItem.DisplayText
        }
        else
        {
            <a edit-for="@contentItem">@contentItem.DisplayText</a>
        }
        </div>
    </div>

    <div class="list-group list-group-horizontal">
        <div class="list-group-item border-0 font-weight-bold col-4 col-lg-3 col-xl-2 pt-0 pr-0 pb-0">@T["Version"]</div>
        <div class="list-group-item border-0 pt-0 pb-0">
        @if (contentItem.ContentItemVersionId == latestVersionId)
        {
            @T["Version {0}", versionNumber]
        }
        else
        {
            <a asp-route-area="OrchardCore.Contents"
               asp-action="Detail"
               asp-controller="Content"
               asp-route-versionNumber="@versionNumber"
               asp-route-auditTrailEventId="@auditTrailEvent.AuditTrailEventId">
                @T["Version {0}", versionNumber]
            </a>
        }
        </div>
    </div>

    <div class="list-group list-group-horizontal">
        <div class="list-group-item border-0 font-weight-bold col-4 col-lg-3 col-xl-2 pt-0 pr-0">@T["Comment"]</div>
        <div class="list-group-item border-0 pt-0">@auditTrailEvent.Comment</div>
    </div>
</div>

@if (diffNodes != null && diffNodes.Any())
{
    <div class="form-group">
        <div class="custom-control custom-switch">
            <div class="d-inline-block" data-toggle="collapse" data-target="#beforeAfter" aria-expanded="false">
                <input type="checkbox" class="custom-control-input" id="showBeforeAfter">
                <label class="custom-control-label cursor-pointer" for="showBeforeAfter">@T["Show before / after"]</label>
            </div>
        </div>

        <div class="custom-control custom-switch">
            <div class="d-inline-block" data-toggle="collapse" data-target="#diff" aria-expanded="false">
                <input type="checkbox" class="custom-control-input" id="showDiff" checked>
                <label class="custom-control-label cursor-pointer" for="showDiff">@T["Show diff"]</label>
            </div>
        </div>
    </div>

    <div class="table-responsive">
        <table class="table table-hover table-striped table-bordered">
            <thead>
                <tr>
                    <th scope="col">@T["Action"]</th>
                    <th scope="col">@T["Context"]</th>
                    <th class="collapse" scope="col" id="beforeAfter">@T["Before"]</th>
                    <th class="collapse" scope="col" id="beforeAfter">@T["After"]</th>
                    <th class="collapse show" scope="col" id="diff">@T["Diff"]</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var node in diffNodes)
                {
                    <tr>
                        <td>@T[node.Type.ToString()]</td>
                        <td>@node.Context</td>
                        <td class="collapse" id="beforeAfter" data-previous>@node.Previous</td>
                        <td class="collapse" id="beforeAfter" data-current>@node.Current</td>
                        <td class="collapse show" id="diff" data-diff></td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
}

<script at="Foot" type="text/javascript">
    $(function () {
        var previous = [];
        var current = [];
        var i = 0;

        $('[data-previous]').each(function () {
            previous.push($(this).html());
        });

        $('[data-current]').each(function () {
            current.push($(this).html());
        });

        $('[data-diff]').each(function () {
            var diff = Diff.diffWords(previous[i], current[i]),
                display = $(this),
                fragment = document.createDocumentFragment();

            diff.forEach(function (part) {
                color = part.added ? 'green' :
                    part.removed ? 'red' : null;
                fontWeight = part.added ? 'bold' :
                    part.removed ? 'bold' : null;
                span = document.createElement('span');

                span.style.color = color;
                span.style.fontWeight = fontWeight;
                span.appendChild(document.createTextNode($("<textarea/>").html(part.value).text()));
                fragment.appendChild(span);
            });

            display.html(fragment);
            i++;
        });
    });
</script>
