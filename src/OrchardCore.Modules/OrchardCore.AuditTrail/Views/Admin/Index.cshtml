@model AuditTrailViewModel
@using Microsoft.Extensions.Localization

@inject IStringLocalizer<ViewContext> S;

@{
    var auditTrailEvents = Model.AuditTrailEvents;

    var orderByItems = new List<SelectListItem>
    {
        new SelectListItem
        {
            Text = S["By Timestamp"],
            Value = AuditTrailOrderBy.DateDescending.ToString(),
            Selected = Model.OrderBy == AuditTrailOrderBy.DateDescending
        },
        new SelectListItem
        {
            Text = S["By Category"],
            Value = AuditTrailOrderBy.CategoryAscending.ToString(),
            Selected = Model.OrderBy == AuditTrailOrderBy.CategoryAscending
        },
        new SelectListItem
        {
            Text = S["By Event"],
            Value = AuditTrailOrderBy.EventAscending.ToString(),
            Selected = Model.OrderBy == AuditTrailOrderBy.EventAscending},
    };
}

<zone name="Title"><h1 class="mb-4">@RenderTitleSegments(T["Audit Trail"])</h1></zone>

<form asp-action="Index" method="get">
    <div class="form-row mb-4">
        @await DisplayAsync(Model.FiltersShape)
        <div class="form-group mr-2">
            <select asp-for="OrderBy" asp-items="orderByItems" class="form-control"></select>
        </div>
        <div class="form-group">
            <button class="btn btn-primary" type="submit">@T["Apply"]</button>
        </div>
    </div>
</form>

@if (!auditTrailEvents.Any())
{
    <div class="alert alert-primary" role="alert">@T["There are no records to display."]</div>
}
else
{
    <div class="table-responsive-sm">
        <table class="table table-hover table-striped table-bordered">
            <thead>
                <tr>
                    <th scope="col"></th>
                    <th scope="col">@T["Category"]</th>
                    <th scope="col">@T["Event"]</th>
                    <th scope="col">@T["User"]</th>
                    @await DisplayAsync(Model.ColumnNamesShape)
                    <th class="text-nowrap" scope="col">@T["Client IP"]</th>
                    <th scope="col">@T["Timestamp"]</th>
                    <th scope="col">@T["Summary"]</th>
                    <th scope="col">@T["Comment"]</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var ev in auditTrailEvents)
                {
                    <tr>
                        <td>@await DisplayAsync(ev.ActionsShape)</td>
                        <td>@ev.CategoryDescriptor.LocalizedName</td>
                        <td>@ev.EventDescriptor.LocalizedName</td>
                        <td>@ev.AuditTrailEvent.UserName</td>
                        @await DisplayAsync(ev.ColumnsShape)
                        <td>@ev.AuditTrailEvent.ClientIpAddress</td>
                        <td>@await DisplayAsync(await New.DateTime(Utc: ev.AuditTrailEvent.CreatedUtc, Format: "g"))</td>
                        <td>@await DisplayAsync(ev.SummaryShape)</td>
                        <td>@Html.Raw(ev.AuditTrailEvent.Comment)</td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
}

@await DisplayAsync(Model.PagerShape)
